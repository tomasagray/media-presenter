plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

def props = 'application.properties'
processResources {
	filesMatching(props) {
		expand(project.properties)
	}
}


group = 'self.me'
version = findProperty('appVersion')
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.hibernate.search:hibernate-search-mapper-orm-orm6:6.1.8.Final'
	implementation 'org.hibernate.search:hibernate-search-backend-lucene:6.1.8.Final'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	runtimeOnly 'com.h2database:h2'
	// Annotations
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.jetbrains:annotations:23.0.0'
    // Parsing
    implementation 'com.google.code.gson:gson'
    // Other
    implementation 'commons-io:commons-io:2.11.0'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
